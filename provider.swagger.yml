swagger: '2.0'
info:
  version: "0.2.0"
  title: French consultations portal platform providers endpoints definition
  description: >
    This document defines the minimal API endpoints exposed by consultation solutions providers for the French consultations portal platform, for allowing on-demand deployments. This document has been produced as a collaborative work by [Etalab](https://www.etalab.gouv.fr/), [Cap Collectif](https://cap-collectif.com/) and [Bluenove](http://bluenove.com/).
      
    This document specifies the minimal common API set. Each and every data structure specified here may be extended with additionnal metadata. Also, some API navigation mechanisms have not been specified in this document. It is up to each provider to decide whether or not to provide these facilities.
      
    Providers API endpoints `MUST` be exposed through https or http2.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: 'api.domain.tld'
basePath: '/'
schemes:
 - 'https'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    name: 'X-Api-Key'
    in: header
security:
  -
    api_key: []
paths:
  /instances:
    get:
      description: |
        Gets the list of instances.
      security:
        -
          api_key: []
      responses:
        200:
          description: Successful response, an array of Instances
          schema:
            $ref: "#/definitions/Instances"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Create a new instance
      description: |
        Requests the creation of a new instance.
      parameters:
        - name: payload
          in: body
          description: payload representing the instance creation request
          required: true
          schema:
            $ref: "#/definitions/InstanceCreationPayload"
      security:
        -
          api_key: []
      responses:
        201:
          description: The instance (created synchronously)
          headers:
            Location:
              description: URI of the newly created resource
              type: string
          schema:
            $ref: "#/definitions/Instance"
        202:
          description: The instance (asynchronous creation)
          headers:
            Location:
              description: URI of the newly created resource
              type: string
          schema:
            $ref: "#/definitions/Instance"
        400:
          description: >
            When the request tries to creata an instance for which the slug is already in use, the response should have a HTTP 400 status code, except if the instance status is "`failed`". In that specific case, the instance status will be changed to "`requested`" and the response should use the HTTP 202 status code.
          schema:
            $ref: "#/definitions/Error"
        default:
          description: >
            Unexpected error. In the case of an already existing instance (unicity checked on the `slug` InstanceCreationPayload property), the response should be a HTTP 400 status code, except if the instance status is "`failed`". In that specific case, the instance status will be changed to "`requested`". This specific case allows to retry creating an instance when it crashed.
          schema:
            $ref: "#/definitions/Error"
  "/instances/{instanceId}":
    get:
      summary: Get the detail of an instance
      description: This endpoint allows to retrieve the details of a given instance.
      parameters:
        - name: instanceId
          in: path
          description: id of the instance
          required: true
          type: string
          format: uuid
      security:
        -
          api_key: []
      responses:
        200:
          description: Successful response, the details of an instance.
          schema:
            $ref: "#/definitions/Instance"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      errors:
        type: object
        additionalProperties: {}
  Instance:
    type: object
    required:
      - url
      - name
      - adminEmail
      - adminName
      - createdAt
    properties:
      url:
        type: string
        description: the full url to access the consultation instance
      name:
        type: string
        description: name of the instance (as it was provided by the client, even if it gets altered later in the instance lifecycle)
      adminName:
        type: string
        description: name of the instance admin user (as it was provided by the client, even if it gets altered later in the instance lifecycle)
      adminEmail:
        type: string
        format: email
        description: email of the instance admin user (as it was provided by the client, even if it gets altered later in the instance lifecycle)
      requestIdentifier:
        type: string
        description: the instance request identifier (generated and provided by the client)
      status:
        type: string
        description: status of the instance
        enum:
          - requested # before the instance is created
          - running # for running instances
          - failure # if the instance could not be created.
          - terminated # if a termination request has been completed
      adminPhone:
        type: string
        description: phone number of the instance admin user (as provided by the client)
      adminOrganizationName:
        type: string
        description: name of the organization of the admin user (as provided by the client)
      createdAt:
        type: string
        format: date-time
        description: Date and time of the creation of the instance
      updatedAt:
        type: string
        format: date-time
        description: Date and time of the last update of the instance
      metadata:
        description: some optionnal additionnal metadata, for informational purpose
        type: object
        additionalProperties: {}
  InstanceCreationPayload:
    type: object
    required:
      - requestIdentifier
      - name
      - slug
      - adminName
      - adminEmail
    properties:
      requestIdentifier:
        type: string
        description: Instance creation request identifier, provided by the client. Must be unique.
      name:
        type: string
        description: "Name of the instance / debate to create."
      slug:
        type: string
        description: Slug of the instance to create, which will be used in the subdomain part of as a url path (depending on how the debate gets created)
      adminName:
        type: string
        description: name of the instance admin user
      adminEmail:
        type: string
        format: email
        description: email of the instance admin user
      adminPhone:
        type: string
        description: phone number of the instance admin user
      adminOrganizationName:
        type: string
        description: name of the organization of the admin user
      metadata:
        description: some optionnal additionnal metadata, for informational purpose
        type: object
        additionalProperties: {}
  Instances:
    type: object
    required:
      - items
    properties:
      items:
        type: array
        description: List of the items
        items:
          $ref: "#/definitions/Instance"
